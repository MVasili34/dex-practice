@page "/editclient/{clientid}"
@inject NavigationManager navigation

<h1>Изменение данных о клиенте и его счетах</h1>
<div style="display: flex;">
    <div style="margin-right: 40px;">
<ClientDetail ButtonText="Изменить"
                Client="@client"
                OnValidSubmit="@Update" />
     </div>
     <div>
        <h2>Список счетов клиента</h2>
        @if (client?.Accounts.Count() != 0)
        {
            <table class=" table table-striped table-bordered" style="width: 750px; font-size: 1.3em">
                <thead>
                    <tr>
                        <th style="width:30%">Идентификатор счёта</th>
                        <th>Валюта (ISO)</th>
                        <th>Сумма</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Account acc in client!.Accounts)
                    {
                        <tr>
                            <td style="width:10%">@acc.AccountId</td>
                            <td>@acc.CurrencyIso</td>
                            <td>@acc.Amount</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h2 style="color: darkred;">У клиента нет счетов!</h2>
        }
     </div>
</div>
@code {
    [Parameter]
    public string ClientId { get; set; } = null!;
    private Client? client = new();

    protected async override Task OnParametersSetAsync()
    {
        using (HttpClient http = new())
        {
            client = await http.GetFromJsonAsync<Client>(
                $"https://localhost:5001/api/clients/{ClientId}");
        }
    }

    private async Task Update()
    {
        if (client is not null)
        {
            using (HttpClient http = new())
            {
                HttpResponseMessage response = await http.PutAsJsonAsync<Client>(
                    $"https://localhost:5001/api/clients/{ClientId}", client);
                if (response.StatusCode == System.Net.HttpStatusCode.NoContent)
                {
                    navigation.NavigateTo("clients");
                }
            }
        }
    }
}
