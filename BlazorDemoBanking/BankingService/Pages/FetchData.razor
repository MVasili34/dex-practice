@page "/fetchdata"
@using BankingService.Data
@inject CurrencyService currency

<PageTitle>Конвертер</PageTitle>

<h1>Сервис обмена валют</h1>

<div style="font-size: 1.5em">
    <hr />
<div class="card text-center">
    <div class="card-header">
        Покупка
    </div>
    <div class="card-body">
        <p class="card-text">Выбор валют</p>
        <div class="flex-column">
            <InputSelect @bind-Value="_selectedFrom">
                @foreach (var currency in _currencies)
                {
                    <option value="@currency">@currency</option>
                }
            </InputSelect>
                &rarr;
            <InputSelect @bind-Value="_selectedTo">
                @foreach (var currency in _currencies)
                { 
                    <option value="@currency">@currency</option>
                }
            </InputSelect>
        </div>
        <div class="flex-column">
                <InputNumber @bind-Value="@_amountFrom" />
                &rarr;
                <InputNumber @bind-Value="@_amountTo" disabled="true" />
        </div>
        <a @onclick="SellClick" style="margin-top: 10px; color: white" class="btn btn-primary">Продать</a>
    </div>
</div>
<hr />
<div class="card text-center">
    <div class="card-header">
        Продажа
    </div>
        <div class="card-body">
            <p class="card-text">Выбор валют</p>
            <div class="flex-column">
                <InputSelect @bind-Value="_selectedFrom">
                    @foreach (var currency in _currencies)
                    {
                        <option value="@currency">@currency</option>
                    }
                </InputSelect>
                &rarr;
                <InputSelect @bind-Value="_selectedTo">
                    @foreach (var currency in _currencies)
                    {
                        <option value="@currency">@currency</option>
                    }
                </InputSelect>
            </div>
            <div class="flex-column">
                <InputNumber @bind-Value="@_amountFrom" />
                &rarr;
                <InputNumber @bind-Value="@_amountToBuy" disabled="true" />
            </div>
            <a @onclick="BuyClick" style="margin-top: 10px; color: white" class="btn btn-primary">Купить</a>
    </div>
</div>

</div>
<RadzenAlert AlertStyle="AlertStyle.Warning" Variant="Variant.Filled" Shade="Shade.Light" Visible="_showerror">
    Сервис обмена валют временно не работает. Проверьте ограничения ключа Amdoren API.
</RadzenAlert>
@code {
    private bool _showerror = false;
    private decimal _amountFrom = 1;
    private decimal _amountTo;
    private decimal _amountToBuy;
    private string _selectedFrom = "USD";
    private string _selectedTo = "BYN";
    private readonly string[] _currencies = new[] {"USD", "RUB", "MDL", "EUR", "BYN"};

    private async Task SellClick()
    {
        _showerror = false;
        AmdorenResponse response = await currency.Convert(new ConvertCurrency()
            {
                From = _selectedFrom,
                To = _selectedTo,
                Amount = _amountFrom
            });
        if (response.Error == 0)
        {
            _amountTo = response.Amount-response.Amount*0.02M;
        }
        else
        {
            _showerror = true;
        }
    }

    private async Task BuyClick()
    {
        _showerror = false;
        AmdorenResponse response = await currency.Convert(new ConvertCurrency()
            {
                From = _selectedFrom,
                To = _selectedTo,
                Amount = _amountFrom
            });
        if (response.Error == 0)
        {
            _amountToBuy = response.Amount + response.Amount * 0.05M;
        }
        else
        {
            _showerror = true;
        }
    }
}
